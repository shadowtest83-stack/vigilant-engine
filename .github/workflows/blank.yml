name: Continuous Persistent VPS

on:
  schedule:
    - cron: '*/355 * * * *'   # every ~5h55m
  workflow_dispatch:

jobs:
  vps-session:
    runs-on: ubuntu-latest
    timeout-minutes: 355   # <6h limit

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set hostname
        run: sudo hostnamectl set-hostname biralo

      - name: Download VPS backup (if any)
        uses: actions/download-artifact@v4
        with:
          name: vps-backup
          path: ./backup
        continue-on-error: true

      - name: Install prerequisites
        run: |
          sudo apt update
          sudo apt install -y tmate curl unzip sudo net-tools neofetch rsync zip \
                              docker.io docker-compose
          sudo systemctl enable docker
          sudo systemctl start docker

      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh

      - name: Restore VPS backup
        run: |
          if [ -f ./backup/backup.zip ]; then
            echo "Restoring VPS..."
            sudo unzip -o ./backup/backup.zip -d /

            # Reload services
            sudo systemctl daemon-reexec || true
            sudo systemctl daemon-reload || true

            # Restart enabled services
            for svc in $(systemctl list-unit-files --state=enabled --no-pager --no-legend | awk '{print $1}'); do
              sudo systemctl restart "$svc" || true
            done

            # Restore Docker running containers
            if [ -f /opt/vps-backup/data/running-containers.list ]; then
              sudo systemctl restart docker || true
              sleep 5
              for c in $(cat /opt/vps-backup/data/running-containers.list); do
                sudo docker start "$c" || true
              done
            fi
          else
            echo "No backup found, starting fresh"
          fi

      - name: Restore Tailscale state
        run: |
          if [ -f /opt/vps-backup/data/tailscaled.state ]; then
            sudo mkdir -p /var/lib/tailscale
            sudo cp /opt/vps-backup/data/tailscaled.state /var/lib/tailscale/tailscaled.state
            sudo chmod 600 /var/lib/tailscale/tailscaled.state
          fi

      - name: Start Tailscale
        run: |
          sudo tailscaled &
          sleep 8
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --hostname=biralo || echo "Tailscale already up"

      - name: Create user biralo with sudo
        run: |
          if ! id -u biralo >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash biralo
            echo "biralo:biralo" | sudo chpasswd
            sudo usermod -aG sudo,docker biralo
            echo "biralo ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/biralo
          fi

      - name: Start tmate session (SSH)
        uses: mxschmitt/action-tmate@v3

      - name: Show Tailscale IP
        run: |
          echo "ðŸ”— Tailscale IP:"
          tailscale ip -4 || echo "No Tailscale IP found"

      - name: Sleep until backup
        run: sleep 21000   # ~5h50m

      - name: Create VPS backup
        run: |
          sudo mkdir -p /opt/vps-backup/data
          sudo cp /var/lib/tailscale/tailscaled.state /opt/vps-backup/data/ || true

          # Save running containers
          sudo docker ps -q > /opt/vps-backup/data/running-containers.list || true

          echo "Backing up filesystem..."
          sudo rsync -aAX \
            --exclude={"/opt/vps-backup","/proc/*","/sys/*","/dev/*","/tmp/*","/run/*"} \
            / /opt/vps-backup/full

          cd /
          sudo zip -r /backup.zip opt/vps-backup

      - name: Upload VPS backup artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vps-backup
          path: /backup.zip
          retention-days: 90
